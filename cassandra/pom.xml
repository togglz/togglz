<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>togglz-project</artifactId>
        <groupId>org.togglz</groupId>
        <version>3.2.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>togglz-cassandra</artifactId>
    <name>Togglz - Cassandra integration</name>
    <description>Togglz - Cassandra integration</description>

    <properties>
        <astyanax.version>3.9.0</astyanax.version>
    </properties>

    <profiles>
        <profile>
            <!-- adds JVM options to java 11+ builds as described in
            https://support.datastax.com/s/article/ERROR-FATAL-Cassandra-is-unable-to-access-required-classes-This-usually-means-it-has-been
            to allow successful test runs -->
            <id>surefire-java11</id>
            <activation>
                <jdk>[11,)</jdk>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <argLine>
                                -Djdk.attach.allowAttachSelf=true
                                --add-exports java.base/jdk.internal.misc=ALL-UNNAMED
                                --add-exports java.base/jdk.internal.ref=ALL-UNNAMED
                                --add-exports java.base/sun.nio.ch=ALL-UNNAMED
                                --add-exports java.management.rmi/com.sun.jmx.remote.internal.rmi=ALL-UNNAMED
                                --add-exports java.rmi/sun.rmi.registry=ALL-UNNAMED --add-exports java.rmi/sun.rmi.server=ALL-UNNAMED
                                --add-exports java.sql/java.sql=ALL-UNNAMED --add-opens java.base/java.lang.module=ALL-UNNAMED
                                --add-opens java.base/jdk.internal.loader=ALL-UNNAMED --add-opens java.base/jdk.internal.ref=ALL-UNNAMED
                                --add-opens java.base/jdk.internal.reflect=ALL-UNNAMED --add-opens java.base/jdk.internal.math=ALL-UNNAMED
                                --add-opens java.base/jdk.internal.module=ALL-UNNAMED --add-opens java.base/jdk.internal.util.jar=ALL-UNNAMED
                                --add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED
                            </argLine>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>org.togglz</groupId>
            <artifactId>togglz-core</artifactId>
        </dependency>

        <dependency>
            <groupId>com.netflix.astyanax</groupId>
            <artifactId>astyanax-core</artifactId>
            <version>${astyanax.version}</version>
        </dependency>
        <dependency>
            <groupId>com.netflix.astyanax</groupId>
            <artifactId>astyanax-thrift</artifactId>
            <version>${astyanax.version}</version>
        </dependency>
        <dependency>
            <groupId>com.netflix.astyanax</groupId>
            <artifactId>astyanax-cassandra</artifactId>
            <version>${astyanax.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.cassandra</groupId>
            <artifactId>cassandra-thrift</artifactId>
            <version>3.11.14</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.12.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.cassandraunit</groupId>
            <artifactId>cassandra-unit</artifactId>
            <version>2.0.2.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
